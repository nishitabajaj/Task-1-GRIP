{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"TASK -1 (PREDICTION USING SUPERVISED ML)","provenance":[],"authorship_tag":"ABX9TyPs+D/NhB29IxG5o+iPgxZe"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Data Science & Business Analytics INTERN @The Sparks Foundation**"],"metadata":{"id":"CdrtQQ2v6hN8"}},{"cell_type":"markdown","source":["# **Task 1: Prediction Using Supervised ML (JUNE 2022)**"],"metadata":{"id":"jfRcHxZ767XB"}},{"cell_type":"markdown","source":["# **BY : NISHITA BAJAJ**"],"metadata":{"id":"ELXpmkoH7FQo"}},{"cell_type":"markdown","source":["***In this regression task we will predict the percentage of marks that a student is expected to score based upon the number of hours they studied. This is a simple linear regression task that involves just two variables.***"],"metadata":{"id":"_B79k50t7SEZ"}},{"cell_type":"markdown","source":["# **Importing the header files**"],"metadata":{"id":"uLAw-dHH7nyZ"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline"],"metadata":{"id":"Rl4CtyZs7rCQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Collecting the data**"],"metadata":{"id":"a6TqnOW77xNI"}},{"cell_type":"code","source":["url = \"http://bit.ly/w-data\"\n","data = pd.read_csv(url)\n","print(\"Data loaded successfully\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1gcye8QX71X0","executionInfo":{"status":"ok","timestamp":1654167966822,"user_tz":-330,"elapsed":395,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"82b54213-ff84-4a04-d5ef-2e61d1692a1b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Data loaded successfully\n"]}]},{"cell_type":"markdown","source":["# **Data Preprocessing**"],"metadata":{"id":"DJ9fB5wm78iA"}},{"cell_type":"code","source":["#total number of rows and columns\n","data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UcALQ_mE8CnQ","executionInfo":{"status":"ok","timestamp":1654167974635,"user_tz":-330,"elapsed":423,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"7c2c9885-049c-4422-d887-36d9df5f41c1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(25, 2)"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#top 10 values from the data\n","data.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"i2qF0Qgg9UJj","executionInfo":{"status":"ok","timestamp":1654167977235,"user_tz":-330,"elapsed":21,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"2c1dc5c7-0fe3-4516-8c26-fa7e74c7a0cd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Hours  Scores\n","0    2.5      21\n","1    5.1      47\n","2    3.2      27\n","3    8.5      75\n","4    3.5      30\n","5    1.5      20\n","6    9.2      88\n","7    5.5      60\n","8    8.3      81\n","9    2.7      25"],"text/html":["\n","  <div id=\"df-1181d45b-7c1f-4015-ad65-8eb94d1117d9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Hours</th>\n","      <th>Scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.5</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.1</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.2</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8.5</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.5</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.5</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>9.2</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>5.5</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8.3</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.7</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1181d45b-7c1f-4015-ad65-8eb94d1117d9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1181d45b-7c1f-4015-ad65-8eb94d1117d9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1181d45b-7c1f-4015-ad65-8eb94d1117d9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["#the datatype of the columnns\n","data.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rv6hYR3r9Yp4","executionInfo":{"status":"ok","timestamp":1654167982375,"user_tz":-330,"elapsed":458,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"95fe7965-7b3d-4d78-a827-d27c3713a7b4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Hours     float64\n","Scores      int64\n","dtype: object"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["#basic statistical details\n","data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"HRD_LHBs9b2s","executionInfo":{"status":"ok","timestamp":1654167984087,"user_tz":-330,"elapsed":15,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"22a06dd4-295d-416c-afb4-3e2ddb441b4a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Hours     Scores\n","count  25.000000  25.000000\n","mean    5.012000  51.480000\n","std     2.525094  25.286887\n","min     1.100000  17.000000\n","25%     2.700000  30.000000\n","50%     4.800000  47.000000\n","75%     7.400000  75.000000\n","max     9.200000  95.000000"],"text/html":["\n","  <div id=\"df-9ffe9b4d-9e25-4846-84fa-2a0fca5a5323\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Hours</th>\n","      <th>Scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>25.000000</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5.012000</td>\n","      <td>51.480000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.525094</td>\n","      <td>25.286887</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.100000</td>\n","      <td>17.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.700000</td>\n","      <td>30.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>4.800000</td>\n","      <td>47.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7.400000</td>\n","      <td>75.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>9.200000</td>\n","      <td>95.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ffe9b4d-9e25-4846-84fa-2a0fca5a5323')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9ffe9b4d-9e25-4846-84fa-2a0fca5a5323 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9ffe9b4d-9e25-4846-84fa-2a0fca5a5323');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["***Data imported successfully***"],"metadata":{"id":"HXQeRCz69pse"}},{"cell_type":"markdown","source":["***Let's plot our data points on 2-D graph to eyeball our dataset and see if we can manually find any relationship between the data. We can create the plot with the following script:***"],"metadata":{"id":"hv2lsvkk92-l"}},{"cell_type":"code","source":["#plotting the data\n","plt.scatter(data['Hours'],data['Scores'], label=\"Scores\")\n","plt.title(\"Hours VS Percentage\")\n","plt.xlabel(\"Hours studied\")\n","plt.ylabel(\"Percentage score\")\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"Ma9g5-8P-Ehf","executionInfo":{"status":"ok","timestamp":1654167990510,"user_tz":-330,"elapsed":459,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"09d2530a-8af8-477d-bc2f-b9fdd553da3a"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["***From the above scatter plot, we can clearly see that there is a linear relation between the number of hours studied and the percentage.***"],"metadata":{"id":"NwdWEUfn-KmW"}},{"cell_type":"markdown","source":["# **PREPARING THE DATA**"],"metadata":{"id":"8xuuEmVB-TTd"}},{"cell_type":"markdown","source":["***The next step is to divide the data into \"attributes\"(inputs) and \"labels\"(outputs).***"],"metadata":{"id":"rZqcm9zF-o3y"}},{"cell_type":"code","source":["X = data.iloc[:,:-1].values\n","Y = data.iloc[:,1].values\n","\n","X.reshape(-1,1)\n","Y.reshape(-1,1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"npTGMki0-_QQ","executionInfo":{"status":"ok","timestamp":1654167994209,"user_tz":-330,"elapsed":414,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"6268160e-b162-4cad-9ac9-ea5ca0c2ef1c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[21],\n","       [47],\n","       [27],\n","       [75],\n","       [30],\n","       [20],\n","       [88],\n","       [60],\n","       [81],\n","       [25],\n","       [85],\n","       [62],\n","       [41],\n","       [42],\n","       [17],\n","       [95],\n","       [30],\n","       [24],\n","       [67],\n","       [69],\n","       [30],\n","       [54],\n","       [35],\n","       [76],\n","       [86]])"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["# **Splitting dataset into training and test set**"],"metadata":{"id":"90r3GAAh_rbW"}},{"cell_type":"markdown","source":["***Now that we have our attributes and labels, the next step is to split this data into training and test sets. We'll do this by using Scikit-Learn's built-in train_test_split() method:***"],"metadata":{"id":"P35PxcjZ-tc7"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size=0.2,random_state = 0)"],"metadata":{"id":"EWXS9qwm-8VO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Training the algorithm**"],"metadata":{"id":"YY2tHjWI_4u3"}},{"cell_type":"markdown","source":["***Now that we have split our data into train and test algorithm, it's time to train our algorithm.***"],"metadata":{"id":"zUmYgrIzAJ5V"}},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression\n","model = LinearRegression()\n","\n","#to tell the model also which data to work on we use the fit() function\n","model.fit(x_train,y_train)\n","\n","print(\"Training complete\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7xlsgj7HANSD","executionInfo":{"status":"ok","timestamp":1654168005128,"user_tz":-330,"elapsed":422,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"0c19eea7-744b-4721-e235-04a5530de2a7"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Training complete\n"]}]},{"cell_type":"code","source":["#visualising the data\n","plt.scatter(x_train,y_train)\n","plt.title(\"Training set\")\n","plt.plot(x_train,model.predict(x_train))\n","plt.xlabel(\"Hours studied\")\n","plt.ylabel(\"Percentage score\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"Zn1g9XmlAqZG","executionInfo":{"status":"ok","timestamp":1654168010261,"user_tz":-330,"elapsed":542,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"7e6832ca-c6f9-4785-80c9-fcff295f10d1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#Accuracy of the training set\n","model.score(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h2Eh1IBMBQwW","executionInfo":{"status":"ok","timestamp":1654168016396,"user_tz":-330,"elapsed":412,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"772b3afe-4519-4eda-abbc-1a6ef102163d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9515510725211552"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["# **Now finding the equation y = mx + c**"],"metadata":{"id":"VAU4PlY4Bbw2"}},{"cell_type":"code","source":["#plotting the regression line\n","line = model.coef_ * X + model.intercept_\n","\n","#plotting for the test data\n","plt.title(\"Test data\")\n","plt.xlabel(\"Hours studied\")\n","plt.ylabel(\"Percentage score\")\n","plt.scatter(X,Y)\n","plt.plot(X,line)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"6Qt1oVnFBjbw","executionInfo":{"status":"ok","timestamp":1654168020347,"user_tz":-330,"elapsed":974,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"e71397ef-daa7-4ea3-8147-65a303815b92"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# **Making Predictions**\n","\n","***Now that we have trained our algorithm, it's time to make some predictions.***"],"metadata":{"id":"BPhs_42kB7Fj"}},{"cell_type":"code","source":["print(x_test) #Testing data- In Hours\n","y_pred = model.predict(x_test)  #predicting the scores"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"io1Hwl_vCDwK","executionInfo":{"status":"ok","timestamp":1654168024794,"user_tz":-330,"elapsed":415,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"1cc45a58-763b-4c9e-81e4-1b25649788e2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1.5]\n"," [3.2]\n"," [7.4]\n"," [2.5]\n"," [5.9]]\n"]}]},{"cell_type":"code","source":["#comparing actual vs predicted data\n","df = pd.DataFrame({\"Actual\" : y_test, \"Predicted\" : y_pred})\n","print(df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LbGznlf9CNJn","executionInfo":{"status":"ok","timestamp":1654168029936,"user_tz":-330,"elapsed":457,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"d04aeabc-5d27-48f4-8749-7ca78162d125"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   Actual  Predicted\n","0      20  16.884145\n","1      27  33.732261\n","2      69  75.357018\n","3      30  26.794801\n","4      62  60.491033\n"]}]},{"cell_type":"markdown","source":["# **Now what would be the score if a student studies for 9.25 hours per day?**"],"metadata":{"id":"gGkBjIoDCSjS"}},{"cell_type":"code","source":["hours = float(input(\"Enter number of hours : \"))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2AlU1KscCcjm","executionInfo":{"status":"ok","timestamp":1654168042111,"user_tz":-330,"elapsed":8330,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"83fd096c-b41f-4f1e-de1b-4545fc3e61fc"},"execution_count":null,"outputs":[{"name":"stdout","output_type":"stream","text":["Enter number of hours : 9.25\n"]}]},{"cell_type":"code","source":["own_pred = model.predict([[hours]])\n","print(\"Number of hours : {}\".format(hours))\n","print(\"Percentage score : {}\".format(own_pred[0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1TapYj11CiLk","executionInfo":{"status":"ok","timestamp":1654168045612,"user_tz":-330,"elapsed":418,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"95b4bb9f-fea5-4219-affa-5e34054b39d1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of hours : 9.25\n","Percentage score : 93.69173248737539\n"]}]},{"cell_type":"markdown","source":["# **Evaluating the model**\n","\n","***The final step is to evaluate the performance of algorithm. This step is particularly important to compare how well different algorithms perform on a particular dataset. For simplicity here, we have chosen the mean square error.*** "],"metadata":{"id":"PG6n7o8MCrXX"}},{"cell_type":"code","source":["#accuracy of the test set\n","model.score(x_test,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TAjkt0U2C5Qe","executionInfo":{"status":"ok","timestamp":1654168051983,"user_tz":-330,"elapsed":400,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"c941ee37-1c32-41d4-f4b0-4f28d0c83e66"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9454906892105354"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","print(\"Mean squared error : \",mean_squared_error(y_test,y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uzYV3d2uDCvM","executionInfo":{"status":"ok","timestamp":1654168055339,"user_tz":-330,"elapsed":391,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"10fe9b54-903e-4ac9-d3a7-1c1006b2c6b4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean squared error :  21.598769307217456\n"]}]},{"cell_type":"code","source":["#visualising the test set\n","plt.title(\"Test data\")\n","plt.xlabel(\"Hours studied\")\n","plt.ylabel(\"Percentage score\")\n","plt.scatter(x_test,y_test)\n","plt.plot(x_train,model.predict(x_train))\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"uCkKJNKjDdYH","executionInfo":{"status":"ok","timestamp":1654168059897,"user_tz":-330,"elapsed":14,"user":{"displayName":"Nishita Bajaj","userId":"06409637558659166604"}},"outputId":"9d8b79ee-9897-4864-b329-3b9eb6c549a7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# **Task 1 is complete**"],"metadata":{"id":"gWZwpvb1D1pJ"}},{"cell_type":"markdown","source":["# **Thank You!!**"],"metadata":{"id":"9jqfyDEuD7ru"}}]}